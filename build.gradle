buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'http://oss.sonatype.org/content/repositories/snapshots'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath 'com.github.townsfolk:gradle-release:1.2'
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.2'
    }
}

group = 'org.spek'

apply plugin: 'release'
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'nexus'

allprojects {
    repositories {
        mavenCentral()
    }
    apply plugin: 'idea'

    sourceCompatibility = '1.7'
    targetCompatibility = '1.7'
}

subprojects {
    buildscript {

        repositories {
            mavenCentral()
            maven {
                url 'http://oss.sonatype.org/content/repositories/snapshots'
            }
        }
        dependencies {
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        }
    }

    apply plugin: 'java'
    apply plugin: 'kotlin'
   
    configurations {
        include_unpacked_jars /// used when packing 'spek.jar' for download
    }

    def junitDependency = "junit:junit:${junitVersion}"
    repositories {
        maven {
            url 'http://oss.sonatype.org/content/repositories/snapshots'
        }
    }
    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
        compile "org.jetbrains.kotlin:kotlin-runtime:${kotlinVersion}"
        compile junitDependency
        include_unpacked_jars junitDependency
    }


    tasks.withType(Jar) { task ->
       task.manifest {
          attributes \
            'Implementation-Title': "Spek", \
            'Implementation-Version': rootProject.version, \
            'Implementation-Kotlin-Version': kotlinVersion, \
            'Build-Time': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
          }
    }

    test {

       // set heap size for the test JVM(s)
       minHeapSize = "128m"
       maxHeapSize = "512m"

       // set JVM arguments for the test JVM(s)
       jvmArgs '-XX:MaxPermSize=256m'
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
             beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
             repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/")
             snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/")
             pom.version = "${version}"
             pom.artifactId = "spek"
             pom.groupId = "com.github.K0zka"
             pom.project {
                 licenses {
                     license {
                         name 'BSD License'
                         url 'http://opensource.org/licenses/BSD-3-Clause'
                         distribution 'repo'
                     }
                 }
                 scm {
                     connection 'scm:git:https://github.com/K0zka/spek'
                     developerConnection 'scm:git:https://github.com/K0zka/spek'
                     url 'https://github.com/K0zka/spek'
                 }
                 dependencies {
                     dependency {
                         groupId 'org.jetbrains.kotlin'
                         artifactId 'kotlin-stdlib'
                         version "${kotlinVersion}"
                     }
                     dependency {
                         groupId 'org.jetbrains.kotlin'
                         artifactId 'kotlin-runtime'
                         version "${kotlinVersion}"
                     }
                     dependency {
                         groupId 'junit'
                         artifactId 'junit'
                         version '4.11'
                     }
                 }
                 developers {
                     developer {
                         id 'jonnyzzz'
                         name 'Eugene Petrenko'
                         url 'https://github.com/jonnyzzz'
                     }
                     developer {
                         id 'hhariri'
                         name 'Hadi Hariri'
                         url 'https://github.com/hhariri'
                     }
                     developer {
                         id 'orangy'
                         name 'Ilya Ryzhenkov'
                         url 'https://github.com/orangy'
                     }
                 }
             }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = 1.11

    doLast() {
      def gradleOpts = "-XX:MaxPermSize=300m -Xmx1024m"
      def gradlew_sh = file("gradlew")
      def gradlew_bat = file("gradlew.bat")
      gradlew_sh.text = gradlew_sh.text.replace("DEFAULT_JVM_OPTS=",
                                                "GRADLE_OPTS=\"$gradleOpts \$GRADLE_OPTS\"\nDEFAULT_JVM_OPTS=")
      gradlew_bat.text = gradlew_bat.text.replace("set DEFAULT_JVM_OPTS=",
                                                  "set GRADLE_OPTS=$gradleOpts %GRADLE_OPTS%\nset DEFAULT_JVM_OPTS=")

    }

}

artifacts {
    archives javadocJar, sourcesJar
}

